- name: "Import, copy and enable ApacheDS instance {{ instance.name }}"
  block:
    - name: "Check if install dir exist"
      register: file_check
      ansible.builtin.stat:
        path: "{{ install_apacheds_path }}/instances/{{ instance.name }}"

    - name: "Create instance dir for {{ instance.name }}"
      when: not file_check.stat.exists
      ansible.builtin.file:
        path: "{{ install_apacheds_path }}/instances/{{ instance.name }}"
        state: directory
        recurse: yes
        mode: "0700"
        group: "{{ install_apacheds_group }}"
        owner: "{{ install_apacheds_user }}"

    - name: "Instance not found, import / copy the default one"
      when: not file_check.stat.exists
      ansible.builtin.copy:
        src: "{{ install_apacheds_path }}/instances/default/"
        dest: "{{ install_apacheds_path }}/instances/{{ instance.name }}/"
        remote_src: true
        mode: "0700"
        group: "{{ install_apacheds_group }}"
        owner: "{{ install_apacheds_user }}"

    - name: "Import ApacheDS instance service file for {{ instance.name }}"
      ansible.builtin.template:
        src: "templates/instance.service.j2"
        dest: "/etc/systemd/system/apacheds_{{ instance.name }}.service"
        owner: "root"
        group: "root"
        mode: "0700"

    - name: "Enable and start ApacheDS"
      register: install_apacheds_service_status
      changed_when: not install_apacheds_service_status.state != "started"
      ansible.builtin.service:
        name: "apacheds_{{ instance.name }}"
        state: "started"
        daemon_reload: true
        enabled: yes

    - name: "Restart ApacheDS"
      register: install_apacheds_service_status
      changed_when: not install_apacheds_service_status.state != "restarted"
      ansible.builtin.service:
        name: "apacheds_{{ instance.name }}"
        state: "restarted"
        daemon_reload: true
        enabled: yes