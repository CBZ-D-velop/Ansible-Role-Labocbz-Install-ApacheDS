---
- name: "Install ldap-utils"
  ansible.builtin.package:
    update_cache: yes
    name:
      - "ldap-utils"

- name: "Install ApacheDS"
  block:
    - name: "Check if install dir exist"
      register: file_check
      ansible.builtin.stat:
        path: "{{ install_apacheds_path }}"

    - name: "Create install dir"
      when: not file_check.stat.exists
      ansible.builtin.file:
        path: "{{ install_apacheds_path }}"
        state: directory
        recurse: yes
        mode: "0700"
        group: "{{ install_apacheds_group }}"
        owner: "{{ install_apacheds_user }}"

    - name: "Download defined version and install ApacheDS"
      ansible.builtin.unarchive:
        src: "https://dlcdn.apache.org//directory/apacheds/dist/{{ install_apacheds_version }}/apacheds-{{ install_apacheds_version }}.tar.gz"
        dest: "{{ install_apacheds_path }}"
        remote_src: yes
        mode: "0700"
        group: "{{ install_apacheds_group }}"
        owner: "{{ install_apacheds_user }}"
        extra_opts: [--strip-components=1]

- name: "Handle TLS"
  block:
    - name: "Check if P12 exist"
      register: file_check
      ansible.builtin.stat:
        path: "{{ install_apacheds_ssl_path }}/keystore.p12"

    - name: "Remove P12"
      when: file_check.stat.exists
      register: output
      changed_when: output.state != "absent"
      ansible.builtin.file:
        path: "{{ install_apacheds_ssl_path }}/keystore.p12"
        state: absent

    - name: "Create P12 file"
      register: output
      changed_when: output.rc != 0
      ansible.builtin.command: >
        openssl pkcs12 -export -in {{ install_apacheds_ssl_crt }} -inkey {{ install_apacheds_ssl_key }} -out {{ install_apacheds_ssl_path }}/keystore.p12 -passout pass:'{{ install_apacheds_ssl_p12_password }}'

    - name: "Fix P12 permissions"
      ansible.builtin.file:
        path: "{{ install_apacheds_ssl_path }}/keystore.p12"
        state: file
        mode: "0700"
        group: "{{ install_apacheds_group }}"
        owner: "{{ install_apacheds_user }}"

- name: "Create instances"
  loop: "{{ install_apacheds_instances }}"
  loop_control:
    loop_var: instance
  ansible.builtin.include_tasks:
    file: "create_instance.yml"
